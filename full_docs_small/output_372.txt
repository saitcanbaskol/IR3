"LOCA: Library of Continuation AlgorithmsWhat is LOCA?LOCA is a new software library for performing bifurcation analysis of large-scale applications. The source code has been available for download since April 19, 2002.LOCA 1.1 Now Available 10/29/2002Multi-Parameter continuation capability via Henderson's MF library, which is now included with the download of LOCA 1.1.Ability to restart turning point talgorithm with previous null vector.LOCA OverviewThe algorithms in LOCA are being designed as part of an ongoing research project at Sandia National Laboratories in Albuquerque into scalable stability analysis algorithms. When implemented with an application code, LOCA enables the tracking of solution branches as a function of system parameters and the direct tracking of bifurcation points.LOCA (which is written in ""C"") is designed to drive application codes that use Newton's method to locate steady-state solutions to nonlinear problems.The algorithms are chosen to work for large problems, such as those that arise from discretizations of partial differential equations, and to run on distributed memory parallel machines.The approach in LOCA for locating and tracking bifurcations begins with augmenting the residual equations defining a steady state with additional equations that describe the bifurcation. A Newton method is then formulated for this augmented system; however, instead of loading up the Jacobian matrix for the entire augmented system (a task that involved second derivatives and dense matrix rows), bordering algorithms are used to decompose the linear solve into several solves with smaller matrices.Almost all of the algorithms just require multiple solves of the Jacobian matrix for the steady state problem to calculate the Newton updates for the augmented system.This greatly simplifies the implementation, since this is the same linear system that an application code using Newton's method will already have invested in. Only the Hopf tracking algorithm requires the solution of a larger matrix, which is the complex matrix involving the Jacobian matrix and an imaginary multiple of the mass matrix.The following algorithms are available in this version of LOCA:Zero order continuationFirst order continuationArc length continuationMulti-parameter continuation  (via Henderson's MF Library)Turning point continuationPitchfork bifurcation continuationHopf bifurcation continuationPhase transition continuationEigenvalue approximation  (via ARPACK)The current algorithms have been shown to scale to problem sizes of order 1 million unknowns on parallel fluid mechanics applications coming from the finite element code MPSalsa . LOCA has also been impelemented with a the Tramonto density functional theory code, the GOMA moving boundary finite element code, and a stand alone test code for solving 1D PDEs. For details on the results of using LOCA, please refer to the LOCA Publications and LOCA Presentations sections below.We are interested in cultivating new collaborations and a few friendly users to this new software. We are looking for feedback on the current algorithms applied to new applications, suggestions for new algorithms, improvements to the LOCA interface, improvements to the implementation manual.LOCA version 1.1Download LOCA 1.1: Theory and Implementation Manual  (PDF)Download LOCA 1.1 SoftwareLOCA PublicationsPublications focused on linear stability (PDF):Linear stability of flow in a differentially heated cavity via large-scale eigenvalue calculationLarge Scale Eigenvalue Calculations for Computing the Stability of Buoyancy Driven FlowsLarge-Scale Eigenvalue Calculations for Stability Analysis of Steady Flows on Massively Parallel ComputersMassively Parallel Linear Stability Analysis with P_ARPACK for 3D Fluid Flow Modeled with MPSalsaPublications focused on bifurcations (PDF):The Computational Design and Analysis of MOVPE ReactorsScalable Bifurcation Analysis Algorithms for Large Parallel ApplicationsUnderstanding the 8:1 Cavity Problem vis Scalable Stability Analysis AlgorithmsComputationa Bifurcation and Stability Studies of the 8:1 Cavity ProblerSQP Optimization of Large-Scale Reacting Flow Applications with MPSalsaStability Analysis of Large-Scale Incompressible Flow Calculations on Massively Parallel ComputersSelected LOCA PresentationsContinuation Methods for Performing Stability Analysis of Large-Scale Applications  (PowerPoint)Stability Analsysis Algorithms for Large-Scale Applications  (PowerPoint)Understanding the 8:1 Cavity Problem via Scalable Stability Analysis Algorithms  (PDF)Linear and Nonlinear Stability Analysis of Incompressible Flows on Parallel Computers  (PDF)Studying Phase Transitions of DFT Models of Confined Fluids using Nonlinear Analysis Tools  (PDF)Large-Scale Stability Analysis Algorithms  (PowerPoint)Project MembersAndy SalingerLouis RomeroRoger PawlowskiEd WilkesRich LehoucqBeth Burroughs  (UNM Grad Student)Nawaf Bou-Rabee  (Caltech Grad Student)Related ProjectsMPSalsa , Sandia's MICS-supported research on advanced numerical methods for chemically reacting flow simulations.Tramonto, Sandia's MICS-supported research on numerical methods for modeling inhomogeneous soft materials.GOMA, Sandia's code for transport modeling of manufacturing flows of systems with free and moving boundaries.Sandia's MICS-supported research in Linear and Eigensystems Algorithm DevelopmentAztec , Sandia's massively parallel iterative solver library for solving sparse linear systemsTrilinos , Sandia's object-oriented parallel solver libraries.Anasazi, Sandia's eigensolver capability within Trilinos.NOX, Sandia's nonlinear solver capability within Trilinos.ARPACK , Rice University's collection of routines designed to solve large scale eigenvalue problems.AUTO Software for Continuation and Bifurcation Problems in ODEs by Doedel et al.Web page with links to many Dynamical Systems software packagesWhat are the plans for LOCA?Interface LOCA with the NOX nonlinear solver as part of the Trilinos framework, making LOCA available to all Trilinos users.Once LOCA is interfaced to the linear solvers available through Trilinos  (e.g Aztec_OO, IFPACK, PETSc), we will research and implement better, nonsingular formulations for the bifurcation tracking algorithms.FundingThis project has been supported by DOE through the MICS, ASCI, and CSRF programs.ContactFor more information, please contact Andy Salinger, agsalin@sandia.gov."
